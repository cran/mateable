// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// pair_si_ech
NumericMatrix pair_si_ech(IntegerVector s1, IntegerVector s2);
RcppExport SEXP mateable_pair_si_ech(SEXP s1SEXP, SEXP s2SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    __result = Rcpp::wrap(pair_si_ech(s1, s2));
    return __result;
END_RCPP
}
// pair_dioecious
NumericMatrix pair_dioecious(IntegerVector s1);
RcppExport SEXP mateable_pair_dioecious(SEXP s1SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    __result = Rcpp::wrap(pair_dioecious(s1));
    return __result;
END_RCPP
}
// row_medians
NumericVector row_medians(NumericMatrix toSort);
RcppExport SEXP mateable_row_medians(SEXP toSortSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type toSort(toSortSEXP);
    __result = Rcpp::wrap(row_medians(toSort));
    return __result;
END_RCPP
}
// row_kth
NumericVector row_kth(NumericMatrix toSort, int k);
RcppExport SEXP mateable_row_kth(SEXP toSortSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type toSort(toSortSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    __result = Rcpp::wrap(row_kth(toSort, k));
    return __result;
END_RCPP
}
// kemp_ind
NumericVector kemp_ind(IntegerVector byDay, IntegerVector starts, IntegerVector ends, IntegerVector durs, bool compSelf);
RcppExport SEXP mateable_kemp_ind(SEXP byDaySEXP, SEXP startsSEXP, SEXP endsSEXP, SEXP dursSEXP, SEXP compSelfSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type byDay(byDaySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type starts(startsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ends(endsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type durs(dursSEXP);
    Rcpp::traits::input_parameter< bool >::type compSelf(compSelfSEXP);
    __result = Rcpp::wrap(kemp_ind(byDay, starts, ends, durs, compSelf));
    return __result;
END_RCPP
}
// daysSync_noself
IntegerMatrix daysSync_noself(IntegerVector starts, IntegerVector ends, int n);
RcppExport SEXP mateable_daysSync_noself(SEXP startsSEXP, SEXP endsSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type starts(startsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ends(endsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(daysSync_noself(starts, ends, n));
    return __result;
END_RCPP
}
// daysSync_self
IntegerMatrix daysSync_self(IntegerVector starts, IntegerVector ends, int n);
RcppExport SEXP mateable_daysSync_self(SEXP startsSEXP, SEXP endsSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type starts(startsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ends(endsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(daysSync_self(starts, ends, n));
    return __result;
END_RCPP
}
// daysEither_noself
IntegerMatrix daysEither_noself(IntegerVector starts, IntegerVector ends, int n);
RcppExport SEXP mateable_daysEither_noself(SEXP startsSEXP, SEXP endsSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type starts(startsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ends(endsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(daysEither_noself(starts, ends, n));
    return __result;
END_RCPP
}
// daysEither_self
IntegerMatrix daysEither_self(IntegerVector starts, IntegerVector ends, int n);
RcppExport SEXP mateable_daysEither_self(SEXP startsSEXP, SEXP endsSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type starts(startsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ends(endsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(daysEither_self(starts, ends, n));
    return __result;
END_RCPP
}
